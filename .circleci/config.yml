# .circleci/config.yml
version: 2.1

dependencies:
  pre:
  - curl -sS https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash

references:

  ios_config: &ios_config
    macos:
      xcode: 14.2.0
    environment:
      FL_OUTPUT_DIR: output
      LC_ALL: en_GB.UTF-8
      LANG: en_GB.UTF-8
      TERM: xterm-256color

  configure_google_services: &configure_google_services
    run:
      name: Configure Google Services
      command: |
        echo "Google Services"
        echo 'export SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC="$SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC"' >> $BASH_ENV
        echo $SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC | base64 --decode > Example/SuperAwesome/${SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_NAME}.plist

  generate_github_token: &generate_github_token
    run:
      name: Generate & store Github Token
      command: |
        curl -L https://github.com/SuperAwesomeLTD/gha-token-generator/releases/download/v1.0.3/gha-token-generator_1.0.3_Darwin_x86_64.tar.gz | tar xz
        GENERATED_APP_TOKEN=$( ./gha-token-generator -app-id ${SA_RELEASE_BOT_APP_ID} -org-name SuperAwesomeLTD -pem-key ${SA_RELEASE_BOT_GITHUB_PEM} )
        echo "export GITHUB_TOKEN=${GENERATED_APP_TOKEN}" >> $BASH_ENV
        echo "export GIT_COMMITTER_NAME=sa-release-bot" >> $BASH_ENV
        echo "export GIT_COMMITTER_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV
        echo "export GIT_AUTHOR_NAME=sa-release-bot" >> $BASH_ENV
        echo "export GIT_AUTHOR_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV

  # clone some scripts
  clone_scripts_repo: &clone_scripts_repo
    run:
      name: Clone scripts repo
      command: |
        git clone https://x-access-token:${GITHUB_TOKEN}@github.com/SuperAwesomeLTD/sa-continuous-integration.git "${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}"

  # bootstrap iOS system
  bootstrap_ios: &bootstrap_ios
    run:
      name: Bootstrap iOS
      command: |
        ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/bootstrap/bootstrap-mobile-ios-sdk.sh

jobs:

  checkout_code:
    <<: *ios_config
    steps:
      - checkout
      - persist_to_workspace:
          root: "."
          paths:
            - "."

  swiftlint:
    docker:
      - image: bytesguy/swiftlint:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml

  # Run unit tests
  test_superawesome_base_unit_tests:
    <<: *ios_config
    environment:
      SA_IOS_SDKS_SCHEME: "SuperAwesomeExample"
      SA_IOS_SDKS_PATH_TO_WORKSPACE: "Example/SuperAwesomeExample"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Fastlane
          command: |
            cd Example/SuperAwesomeExampleUITests/MockServer
            /usr/bin/java -jar WireMock.jar &
            cd ../../../
            fastlane run_all_tests
      - store_test_results:
          path: "./fastlane/test_output"
      - store_artifacts:
          path: "./fastlane/test_output"
          destination: scan-test-output
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

  # Run ui tests
  test_superawesome_base_ui_tests:
    <<: *ios_config
    environment:
      IOS_IPHONE_UI_TEST_DEVICE: "iPhone SE (3rd generation) (16.2)"
      IOS_IPAD_UI_TEST_DEVICE: "iPad Pro (11-inch) (4th generation) (16.2)"
      SA_IOS_SDKS_SCHEME: "SuperAwesomeExample - UITests"
      SA_IOS_SDKS_PATH_TO_WORKSPACE: "Example/SuperAwesomeExample"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Fastlane
          command: |
            cd Example/SuperAwesomeExampleUITests/MockServer
            /usr/bin/java -jar WireMock.jar &
            cd ../../../
            fastlane run_all_tests
      - store_test_results:
          path: "./fastlane/test_output"
      - store_artifacts:
          path: "./fastlane/test_output"
          destination: scan-test-output
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

  semantic_release_dry_run:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - run:
          name: Check semantic release version
          command: |
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/semantic-release/semantic-release.sh --dry-run
      - persist_to_workspace:
          root: "."
          paths:
            - "nextRelease"

  semantic_release:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - run:
          name: Run semantic release
          command: |
            git pull origin develop
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/semantic-release/semantic-release.sh

  auto_update_release_version:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - attach_workspace:
          at: .
      - run:
          name: Auto update release version
          command: |
            NEXT_RELEASE_NUMBER=`cat nextRelease`
            VERSION_PROPERTIES=Pod/Classes/Common/Model/Version.swift

            if [[ ( ! -z "$NEXT_RELEASE_NUMBER" ) && ( -f "$VERSION_PROPERTIES" ) ]]; then

              echo "****** Current release version ******"
              cat $VERSION_PROPERTIES

              echo "let SDK_VERSION = \"$NEXT_RELEASE_NUMBER\"" > $VERSION_PROPERTIES

              echo "****** Updated release version ******"
              cat $VERSION_PROPERTIES

              git pull origin develop
              git add $VERSION_PROPERTIES
              git commit -m "Auto incremented version to $NEXT_RELEASE_NUMBER via Circle CI [skip ci]"
              git push -q origin develop
            else
              echo "Next release version number not found, no new version to release."
              exit 1
            fi


  ## Run sdk push - base
  sdk_push_superawesome:
    <<: *ios_config
    environment:
      FL_OUTPUT_DIR: output
      SA_IOS_SDKS_MODULE: "SuperAwesome"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      SA_IOS_SDKS_HAS_PRIVATE_DEPENDENCIES: false
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Push Superawesome to cocoapods
          command: fastlane sdk_push isPrivateRepo:false skipVersionBump:true
  ## Run sdk push - admob
  sdk_push_superawesome_admob:
    <<: *ios_config
    environment:
      FL_OUTPUT_DIR: output
      SA_IOS_SDKS_MODULE: "SuperAwesomeAdMob"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      SA_IOS_SDKS_HAS_PRIVATE_DEPENDENCIES: false
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Push Superawesome-AdMob to cocoapods
          command: fastlane sdk_push isPrivateRepo:false skipVersionBump:true
          
workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
                - develop
    jobs:
      - checkout_code:
          context: MOBILE_IOS_SDKS
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - test_superawesome_base_ui_tests:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

  pull_request:
    jobs:
      - checkout_code:
          context: MOBILE_IOS_SDKS
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: develop

      - swiftlint:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: develop

      - test_superawesome_base_unit_tests:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: develop

      - test_superawesome_base_ui_tests:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: /ui-tests\/.*/

  develop:
    jobs:
      - checkout_code:
          context: MOBILE_IOS_SDKS
          filters:
            branches:
              only: develop

      - swiftlint:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - test_superawesome_base_unit_tests:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - test_superawesome_base_ui_tests:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - semantic_release_dry_run:
          context: MOBILE_IOS_SDKS
          requires:
            - test_superawesome_base_unit_tests
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - approve_dry_run_and_release:
          type: approval
          requires:
            - semantic_release_dry_run
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - auto_update_release_version:
          context: MOBILE_IOS_SDKS
          requires:
            - approve_dry_run_and_release
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - semantic_release:
          context: MOBILE_IOS_SDKS
          requires:
            - auto_update_release_version
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

  release:
    jobs:
      - checkout_code:
          context: MOBILE_IOS_SDKS
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - sdk_push_superawesome:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - sdk_push_superawesome_admob:
          context: MOBILE_IOS_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/


